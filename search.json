[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Professional Website Starter Guide",
    "section": "",
    "text": "Introduction",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#the-site-is-currently-under-maintenance.-please-return-shortly.",
    "href": "index.html#the-site-is-currently-under-maintenance.-please-return-shortly.",
    "title": "Professional Website Starter Guide",
    "section": "The site is currently under maintenance. Please return shortly.",
    "text": "The site is currently under maintenance. Please return shortly.\nThe following is a quick starter guide designed to get you acquainted with GitHub Pages, an option for you to create a personal website. If you’d rather start with a website on Google Sites (no coding necessary!), we include those instructions first.\nWe include instructions for editing your website with four options. For the option you would like to choose, simply click on its link below for detailed instructions to get started.\n\nGoogle Sites\nThe online file editor through GitHub\nGitHub Desktop\nRStudio and Git\n\nFeel free to choose the option that best fits your technical comfort level. If you are already used to R/RStudio/Git, the last option may be best for you. If you don’t know what those are, but you know how to code in HTML, feel free to use options 2 or 3. If you have no clue how to code (that’s OK!), then a Google Sites page might be right for you.\nAdditionally, we include instructions for finding and using templates, customizing your site, and connecting your site to a custom domain.\nNote: In Google Sites, support for custom domains is currently not available for managed accounts, like a g.harvard.edu account. If you really want to use a custom domain (i.e. yourname.com), then you should either use GitHub Pages or use a personal Google account to make your Google Site.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "GS_start.html",
    "href": "GS_start.html",
    "title": "Getting Started",
    "section": "",
    "text": "If you don’t want to code at all, the Google Sites option is best for you!\nTo get started, you only need to ensure that you have a Google Account (e.g., a gmail account). If you do not have one, please make one at accounts.google.com.\nAdditionally, before you get started, it would be great to have the following easily accessible to add into your website:\n\nA professional biography\nA headshot, if you have one\nYour CV or resume (PDFs are best!)\nResearch interests and projects\nContact information (e.g., your professional email, social links if you post on X or BlueSky, your GitHub, etc.)\n\nIf you have additional questions not answered by this quick starter guide, the Google Support Guide may be of use to you.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "GS_create.html",
    "href": "GS_create.html",
    "title": "Creating Your Website",
    "section": "",
    "text": "Creating your website with Google Sites is as easy as clicking a button. Simply go to Google Sites (you may be prompted to log in, if you are not already).\nUnder “Start a new site” there is a list of templates. Feel free to browse the templates before you select which one you’d like to use.1 We suggest either:\nOnce you select the template you’d like to use, Google Sites will redirect to a customizable version of the template for you to edit.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Creating Your Website</span>"
    ]
  },
  {
    "objectID": "GS_create.html#footnotes",
    "href": "GS_create.html#footnotes",
    "title": "Creating Your Website",
    "section": "",
    "text": "If you would rather create your site from scratch, you can use the “Blank” option, though that will require more effort on your end to create your content.↩︎",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Creating Your Website</span>"
    ]
  },
  {
    "objectID": "GS_customize.html",
    "href": "GS_customize.html",
    "title": "Customize Your Website",
    "section": "",
    "text": "About Page\nYou are now ready to customize the template with your information. Google Sites is driven by its user interface. There is no coding that you need to do. Instead, there are pop-ups, and various tool menus that allow you to edit your site, insert or remove content, create or delete pages, and edit the theme.\nUsing the “Graduates” template as an example, you can start with three pages: (1) About, (2) Resume, and (3) Research & Projects.\nYou can change these page names by navigating on the right-most menu bar to the “Pages” tab, and then double-clicking on the page name to change it. You can also use the “+” button at the bottom of the menu bar to add pages. You can use the three-dot menu next to each page name to delete or duplicate a page.\nFor example, you may wish to change “About” to “Home”.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "GS_customize.html#about-page",
    "href": "GS_customize.html#about-page",
    "title": "Customize Your Website",
    "section": "",
    "text": "Add your name to the header by simply clicking on the “Tina Smith, PhD” and putting your name there instead.\nIntroduce yourself by editing the first text box.\n\n\nHover over the text box, and click on the pencil icon to edit.\n\n\nYou can change the text type (e.g., title), font, size, styles, and formatting in the tool menu that pops up above the text box.\n\n\nYou can add an image of yourself.\n\n\nClick on the existing image.\n\n\nIn the tool bar that pops up, select the three dots.\n\n\nHover over “Replace image” and then click “Upload”.\n\n\nFrom your computer, select the image you would like to add.\n\n\nYou can choose to move, add, or delete sections on your homepage if you wish.\n\n\nTo move a section, you can hover over the content, move your cursor to the left-most part of the content (where there are 10 dots in 2 columns), and drag the section to your desired location.\n\n\nTo add a section, make sure the menu bar on the right side is on the “Insert” tab, and select your desired content block.\n\n\nTo delete a section, hover over it, and in the left-most pop-up menu, click the trash icon.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "GS_customize.html#resume-page",
    "href": "GS_customize.html#resume-page",
    "title": "Customize Your Website",
    "section": "Resume Page",
    "text": "Resume Page\n\nNavigate to the Resume Page by clicking on “Resume” in the top header.\nGoogle Slides allows the option to include resume sections as plain text on the site, or as a Google Doc/PDF, or both. Choose whichever you’d like.\nYou can simply click the plain text sections if you’d like to include those. If not, hover over each and select the trash icon in the left-side pop-up menu to delete them.\n\n\n\nIf you have your resume as a Google Doc:\n\n\n\nIn the right-side menu bar under the “Insert” tab, select “Docs”.\n\n\nIn the pop-up menu, select your Google Docs resume.\n\n\nClick the blue “Insert” button.\n\n\nNote that this will insert the Google Doc in a new section under your current section.\n\n\n\n\n\nIf you have your resume as a PDF:\n\n\n\nYou need to upload your PDF file to your Google Drive.\n\n\nIn the right-side menu bar under the “Insert” tab, select “Drive”.\n\n\nIn the pop-up menu, navigate to and select your PDF resume.\n\n\nClick the blue “Insert” button.\n\n\nNot that this will insert the PDF in a new section under your current section.\n\n\n\nIf you get any messages about permissions for files:\n\nMake sure that the drop-down is set to “Viewer” and then click “Share”.\nNavigate to the Google Drive that has your file.\nAccess the file.\nClick the blue “Share” button at the top-right.\nUnder “General Access”, change the drop-down to “Anyone with the link” and make sure that the second drop-down says “Viewer”.\nClick the blue “Done” button.\nNavigate back to your Google Sites webpage.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "GS_customize.html#research-projects-page",
    "href": "GS_customize.html#research-projects-page",
    "title": "Customize Your Website",
    "section": "Research & Projects Page",
    "text": "Research & Projects Page\nYou can edit the text boxes here as you normally would to add content about projects that you’d like to highlight.\nYou can also add or remove sections as you see fit, also as described earlier.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "GS_customize.html#publishing-your-site",
    "href": "GS_customize.html#publishing-your-site",
    "title": "Customize Your Website",
    "section": "Publishing Your Site",
    "text": "Publishing Your Site\nOnce you are done editing your site and you are ready to publish it.\nTip: In the top menu bar, there is an icon that looks like a computer and a phone. When you hover over it, it says “Preview”. You can use this button to preview what your site will look like on different screens (mobile, tablet, computer). You can click the blue “X” to exit back to the editor.\n\nClick the purple Publish button in the top right corner.\nPut a name for your URL in the “Web address” box. Just below the box will show you what your URL will look like: “https://sites.google.com/”, etc.\nUnder the “Who can view my site” make sure to click the blue “MANAGE” button.\nIn the pop-up, at the “Published Site” section, change the drop-down to “Public”.\nClick “Done”.\nNow, click the purple “Publish” button at the bottom of the pop-up.\nCongrats, you should be done!\n\n\n\nIf you get an error about access to a file, you need to make sure the file is publicly viewable:\n\n\n\nGo to your Google Drive account where the file is stored.\n\n\nAccess the file.\n\n\nClick the blue “Share” button at the top-right.\n\n\nUnder “General Access”, change the drop-down to “Anyone with the link” and make sure that the second drop-down says “Viewer”.\n\n\nClick the blue “Done” button.\n\n\nNavigate back to your Google Sites webpage.\n\n\nRe-publish your site.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "GS_domain.html",
    "href": "GS_domain.html",
    "title": "Adding a Custom Domain",
    "section": "",
    "text": "Customizing your domain name can be a complicated process. As noted earlier, if you are using an account that has an administrator (e.g., a school or work account), you cannot add a custom domain yet.\nIf you are using a personal gmail account for your Google Site, you have the ability to add a custom domain. Google has very detailed instructions to follow for adding a custom domain, including instructions about purchasing domains through Google Workspace, if you wish.",
    "crumbs": [
      "Google Sites",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Adding a Custom Domain</span>"
    ]
  },
  {
    "objectID": "OGHE_start.html",
    "href": "OGHE_start.html",
    "title": "Getting Started",
    "section": "",
    "text": "If you’d like a bit more flexibility than Google Sites, and you are comfortable with some level of HTML, but you’d like to reduce the technical knowledge required, then using the online GitHub editor is the right choice for you!\nEverything will be done through your internet browser, using GitHub’s file editing tool—no downloads or installs needed.\nTo get started, you will need to make sure that you have a GitHub account. If you do not already have one, visit GitHub.com and create an account. If you already have an account, you can log in and enter your credentials.\nYou may be prompted to sign in with 2-Factor Authentication with an email or your phone number.",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "OGHE_create.html",
    "href": "OGHE_create.html",
    "title": "Creating Your Website",
    "section": "",
    "text": "To start, we will create a repository (you can think of this as a folder for your project).",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Creating Your Website</span>"
    ]
  },
  {
    "objectID": "OGHE_create.html#footnotes",
    "href": "OGHE_create.html#footnotes",
    "title": "Creating Your Website",
    "section": "",
    "text": "In fact, if we are creating a GitHub Page that has a different name than our username, e.g., a project webpage, we will need to do this manually, anyhow.↩︎",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Creating Your Website</span>"
    ]
  },
  {
    "objectID": "OGHE_template.html",
    "href": "OGHE_template.html",
    "title": "Using Templates",
    "section": "",
    "text": "Now we are ready to use a template to quickly get the website set up.\nFind a website template that you’d like to use. There are a lot of free ones from https://html5up.net/. Or, if you are already savvy with HTML or web design, you may choose to make your own website from scratch. You can also use Jekyll themes that are designed for GitHub Pages, too.\nSome of the templates that we recommend for multiple-page websites include:\nIf you’d like a 1-page website, some templates include:\nRegardless of your desired choice, the set-up remains the same.",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Using Templates</span>"
    ]
  },
  {
    "objectID": "OGHE_template.html#footnotes",
    "href": "OGHE_template.html#footnotes",
    "title": "Using Templates",
    "section": "",
    "text": "Annoyingly, when choosing your files, GitHub does not allow you to select sub-folders. The best option is to drag-and-drop using the method above. If not, you will have to manually create subfolders inside of your GitHub repo and the add the items from the subfolders to each.↩︎",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Using Templates</span>"
    ]
  },
  {
    "objectID": "OGHE_customize.html",
    "href": "OGHE_customize.html",
    "title": "Customizing Your Website",
    "section": "",
    "text": "Customizing your website requires you to have some basic knowlegde about HTML and css. If that sounds scary, ChatGPT might be able to help you out!\nNow you are ready to customize the website! To personalize your website, you will need to change all of the text and images that are currently in your template.\nIf your site has one page, you will likely only need to edit your index.html file. If your site has more pages, there will be additional .html files for you to edit. To change your styling, there should be a main.css file inside of the assets/css/ folder. Here you can change stylings, like color, text size, and fonts.\nOpen any of the .html files in the GitHub file editor by clicking on the file to edit them. You can replace the text via editing. To replace images, you will need to create an images folder inside of your username.github.io repository, where you can download images to. You will then have to use image tags &lt;img src=“images/specific_path_to_photo.png”&gt; in your .html files.\nAdditionally, you may want to create more .html files, especially if you’d like an individual page for each of your publications, etc. You may want to delete some of the .html files that you don’t use from the template, too. Just make sure that your index.html or other .html files you do use do not link to the files you delete, or your page will get 404 errors if someone clicks on those links.\nMake sure to save and commit all of your changes to GitHub. We recommend doing this repeatedly, so that you can see your edits taking effect as you edit your site. This may take a few minutes after committing. When you are in your GitHub repository, you should see a green checkmark next to your commit message to tell you that your build has successfully deployed.",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Customizing Your Website</span>"
    ]
  },
  {
    "objectID": "OGHE_domain.html",
    "href": "OGHE_domain.html",
    "title": "Adding a Custom Domain",
    "section": "",
    "text": "Customizing your domain name can be a complicated process. The full GitHub instructions can be found here.\nThese instructions assume that you already have ownership of the custom domain that you would like to use, as well as knowledge about your specific DNS provider.\n\n\nGo to your GitHub repository\n\n\nClick Settings\n\n\nIn the left-hand menu bar, select Pages\n\n\nScroll down to the Custom Domain section\n\n\nEnter your custom domain in the textbox. For example, you should write: mysite.com\n\n\nHit Save\n\n\nNavigate to your DNS provider and create a CNAME record that points your subdomain to the default domain for your site.\n\n\nExample: if you want to use www.example.com, you will create a CNAME record that points www.example.com to &lt;username&gt;.github.io. Note that this is the user page, not a repository name.\n\n\nInstructions for creating a CNAME record vary by DNS provider. GitHub recommends using your DNS provider’s documentation .\n\n\nFor example, on GoDaddy, when you add a record, the record name would be “www” and the record value would be “username.github.io”\n\n\n\nTo ensure that your apex domain (i.e. without “www”) works, you should also include four A records in your DNS provider’s web console. For example, on GoDaddy, the name would be the @ symbol and the values would be the following:\n\n\n\n185.199.108.153\n\n\n185.199.109.153\n\n\n185.199.110.153\n\n\n185.199.111.153\n\n\n\nConfirm that your DNS record is configured correctly using the terminal.\n\n\nIn the terminal, type: dig WWW.EXAMPLE.COM +nostats +nocomments +nocmd where WWW.EXAMPLE.COM should be replaced with your custom domain name.\n\n\nYou should see the GitHub pages link in the output.\n\n\nThis can take some time to propogate. For example, on GoDaddy, you can set your “TTL” (time to live) as low as 600 seconds. However, GoDaddy also warns that changes may not take effect for up to 48 hours. We also suggest checking your site (and all variations of your site link, e.g., with and without “www”) on an incognito window, as your browser’s cache can sometimes make it appear as if your site did not update.\n\n\n\nGo back to your GitHub repository.\n\n\nGo to Settings &gt; Pages &gt; Custom domain\n\n\nCheck off Enforce HTTPS\n\n\n\nIf this says something along the lines of “Your domain is not properly configured to support HTTPS” we will need to add additional records with your DNS provider\n\n\nWe strongly recommend following instructions from your DNS provider. You should look up “HTTPS record for [your DNS provider]” in Google and follow any of their documentation.\n\n\nFor example, on GoDaddy, you can add an HTTPS record where the name is @ and the value is your site’s domain (e.g., mysite.com)\n\n\n\nIf you run into any additional problems, you may want to ensure that there are no additional A records aside from the ones listed above. This may be a problem if you have previously had your site hosted through a service separate from GitHub pages.\n\n\nSome common warning messages that you may see when GitHub pages is connecting to your site include “DNS valid for primary” or “DNS check in progress” – these are both OK, and should go away once your site is connected.\n\n\nOn the other hand, if you get an error message “DNS check unsuccessful” or “Both your custom domain and its alternative name are improperly configured,” then it means either your A or CNAME records are incorrect. Please check these!",
    "crumbs": [
      "Online GitHub Editor",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Adding a Custom Domain</span>"
    ]
  },
  {
    "objectID": "GHD_start.html",
    "href": "GHD_start.html",
    "title": "Getting Started",
    "section": "",
    "text": "If you’re less familiar with RStudio and Git, and you’d like to stay online, then using the online GitHub editor is the right choice for you!",
    "crumbs": [
      "GitHub Desktop",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "GHD_create.html",
    "href": "GHD_create.html",
    "title": "Creating Your Website",
    "section": "",
    "text": "If you’re less familiar with RStudio and Git, and you’d like to stay online, then using the online GitHub editor is the right choice for you!",
    "crumbs": [
      "GitHub Desktop",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Creating Your Website</span>"
    ]
  },
  {
    "objectID": "GHD_template.html",
    "href": "GHD_template.html",
    "title": "Using Templates",
    "section": "",
    "text": "If you’re less familiar with RStudio and Git, and you’d like to stay online, then using the online GitHub editor is the right choice for you!",
    "crumbs": [
      "GitHub Desktop",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Using Templates</span>"
    ]
  },
  {
    "objectID": "GHD_customize.html",
    "href": "GHD_customize.html",
    "title": "Customize Your Website",
    "section": "",
    "text": "If you’re less familiar with RStudio and Git, and you’d like to stay online, then using the online GitHub editor is the right choice for you!",
    "crumbs": [
      "GitHub Desktop",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "GHD_domain.html",
    "href": "GHD_domain.html",
    "title": "Adding a Custom Domain",
    "section": "",
    "text": "Customizing your domain name can be a complicated process. The full GitHub instructions can be found here.\nThese instructions assume that you already have ownership of the custom domain that you would like to use, as well as knowledge about your specific DNS provider.\n\n\nGo to your GitHub repository\n\n\nClick Settings\n\n\nIn the left-hand menu bar, select Pages\n\n\nScroll down to the Custom Domain section\n\n\nEnter your custom domain in the textbox. For example, you should write: mysite.com\n\n\nHit Save\n\n\nNavigate to your DNS provider and create a CNAME record that points your subdomain to the default domain for your site.\n\n\nExample: if you want to use www.example.com, you will create a CNAME record that points www.example.com to &lt;username&gt;.github.io. Note that this is the user page, not a repository name.\n\n\nInstructions for creating a CNAME record vary by DNS provider. GitHub recommends using your DNS provider’s documentation .\n\n\nFor example, on GoDaddy, when you add a record, the record name would be “www” and the record value would be “username.github.io”\n\n\n\nTo ensure that your apex domain (i.e. without “www”) works, you should also include four A records in your DNS provider’s web console. For example, on GoDaddy, the name would be the @ symbol and the values would be the following:\n\n\n\n185.199.108.153\n\n\n185.199.109.153\n\n\n185.199.110.153\n\n\n185.199.111.153\n\n\n\nConfirm that your DNS record is configured correctly using the terminal.\n\n\nIn the terminal, type: dig WWW.EXAMPLE.COM +nostats +nocomments +nocmd where WWW.EXAMPLE.COM should be replaced with your custom domain name.\n\n\nYou should see the GitHub pages link in the output.\n\n\nThis can take some time to propogate. For example, on GoDaddy, you can set your “TTL” (time to live) as low as 600 seconds. However, GoDaddy also warns that changes may not take effect for up to 48 hours. We also suggest checking your site (and all variations of your site link, e.g., with and without “www”) on an incognito window, as your browser’s cache can sometimes make it appear as if your site did not update.\n\n\n\nGo back to your GitHub repository.\n\n\nGo to Settings &gt; Pages &gt; Custom domain\n\n\nCheck off Enforce HTTPS\n\n\n\nIf this says something along the lines of “Your domain is not properly configured to support HTTPS” we will need to add additional records with your DNS provider\n\n\nWe strongly recommend following instructions from your DNS provider. You should look up “HTTPS record for [your DNS provider]” in Google and follow any of their documentation.\n\n\nFor example, on GoDaddy, you can add an HTTPS record where the name is @ and the value is your site’s domain (e.g., mysite.com)\n\n\n\nIf you run into any additional problems, you may want to ensure that there are no additional A records aside from the ones listed above. This may be a problem if you have previously had your site hosted through a service separate from GitHub pages.\n\n\nSome common warning messages that you may see when GitHub pages is connecting to your site include “DNS valid for primary” or “DNS check in progress” – these are both OK, and should go away once your site is connected.\n\n\nOn the other hand, if you get an error message “DNS check unsuccessful” or “Both your custom domain and its alternative name are improperly configured,” then it means either your A or CNAME records are incorrect. Please check these!",
    "crumbs": [
      "GitHub Desktop",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Adding a Custom Domain</span>"
    ]
  },
  {
    "objectID": "RSG_start.html",
    "href": "RSG_start.html",
    "title": "Getting Started",
    "section": "",
    "text": "Downloading R\nIf you’re ready for a more technical approach, and you are already familiar with projects in RStudio and Git, then this option may be right for you.\nIf you don’t already, you will need various programs downloaded and installed on your computer:\nYou will also need a GitHub account.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "RSG_start.html#downloading-r",
    "href": "RSG_start.html#downloading-r",
    "title": "Getting Started",
    "section": "",
    "text": "To download R (for Macs):\n\n\nGo to r-project.org.\nSelect the location closest to you.\nAt the top of this site (called a “mirror”), there should be a “Download and Install R” section.\nSelect the link that says “Download R for macOS”.\nClick on the link for the latest release that is compatible with your computer. (For the Macs, this might depend on the chip you have).\n\n\nIf you are unsure what macOS and chip you have, you can click on the Apple logo in the menu bar (top left of your screen). Then, click “About This Mac” to see your “Chip” and “macOS”.\n\n\nThis will download a .pkg file. Navigate to your downloads folder and double click the file.\nThis opens up an installer. Follow the directions. (Mostly clicking “Continue”). When it is finished, click the “Close” button. You may also move the installer to the Trash, if prompted.\nWe have now finished installing R.\n\n\n\n\nTo download R (for PCs):\n\n\nGo to r-project.org.\nSelect the location closest to you.\nAt the top of this site (called a “mirror”), there should be a “Download and Install R” section.\nSelect the link that says “Download R for Windows”.\nOn the next page, click the blue link for “base”.\nOn the next page, click the big, blue link for “Download R-[version] for Windows”.\nOnce the installer is downloaded, open it and follow the instructions.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "RSG_start.html#downloading-rstudio",
    "href": "RSG_start.html#downloading-rstudio",
    "title": "Getting Started",
    "section": "Downloading RStudio",
    "text": "Downloading RStudio\n\n\nTo download RStudio:\n\n\nYou should make sure that you installed R (if you skipped the previous step, you won’t be able to properly use RStudio).\nGo to the RStudio download page.\nScroll to the section that says “2: Install RStudio”. Click the big, blue button that says “Download RStudio for [your computer system]”. (The website detects what you have!)\n\n\nIf, for some reason, this is not the correct one, scroll down further to the section titled “All Installers and Tarballs” for your operating system. Click the link for your own.\n\n\nIf you have an older operating system, please see this post for a list of previous versions potentially available to download.\n\n\nOnce the download is complete, open the file and follow the instructions in the pop-up.\nAfter RStudio is installed, open the app and make sure it works.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "RSG_start.html#downloading-git",
    "href": "RSG_start.html#downloading-git",
    "title": "Getting Started",
    "section": "Downloading Git",
    "text": "Downloading Git\n\n\nTo download Git:\n\n\nGo to the Git website and click on your operating system to download.\n\n\nIf you have an older version, follow the blue link “Older releases”.\n\n\nOnce downloaded, open the file and follow the installation instructions.\nIf you’d like to check that git installed correctly (and you know what the Terminal is for Mac, or the Command Prompt for PCs), you can run “git –version” to see what version is downloaded.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "RSG_start.html#making-a-github-account",
    "href": "RSG_start.html#making-a-github-account",
    "title": "Getting Started",
    "section": "Making a GitHub Account",
    "text": "Making a GitHub Account\nTo create a personal website with GitHub, you must already have a GitHub account. If you do not, please make one.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "RSG_start.html#connecting-your-git-to-your-rstudio",
    "href": "RSG_start.html#connecting-your-git-to-your-rstudio",
    "title": "Getting Started",
    "section": "Connecting Your Git to Your RStudio",
    "text": "Connecting Your Git to Your RStudio\nRStudio should be able to automatically detect your Git installation. To test, open your RStudio app, and from the menu, select Tools &gt; Terminal &gt; Move Focus to Terminal. Then type “git –version” in the bottom pane (titled “Terminal”) and make sure you can see the same version as before.\n\n\nIf this does not work, you need to tell RStudio where Git is.\n\n\nYou need to find the path to your git. To do so, you can use the RStudio Terminal and type “which git”. Copy this path. (On a Mac this is usually “/usr/bin/git” and on a PC this is usually “C:Files.exe”).\nIn the top menu bar go to Tools &gt; Global Options. In the pop-up, from the left menu bar, select “Git/SVN”.\nUnder “Git executable”, RStudio usually automatically finds Git. However, if yours was not working, you need to paste the path to your git.\nClick OK.\n\n\nLastly, you need to go to the Terminal tab in RStudio again. Once there, type: git config --global user.name \"Your Name\" and then git config --global user.email \"youremail@example.com\". The email must be the email that you used to set up your GitHub account.\nNow, restart your RStudio.\nWe will later connect our GitHub account to our RStudio once we have a repository for our site/project set up.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "RSG_create.html",
    "href": "RSG_create.html",
    "title": "Create Your Website",
    "section": "",
    "text": "We can now start building the website.\nThese instructions largely follow the instructions from GitHub, found here.\nTo start, we will create a repository (you can think of this as a folder for your project).\nIf you need more instructions about committing and pushing to GitHub, or if you want to use the Terminal/Command Line, check out our Git and GitHub Guide.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Create Your Website</span>"
    ]
  },
  {
    "objectID": "RSG_create.html#footnotes",
    "href": "RSG_create.html#footnotes",
    "title": "Create Your Website",
    "section": "",
    "text": "In fact, if we are creating a GitHub Page that has a different name than our username, e.g., a project webpage, we will need to do this manually, anyhow.↩︎",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Create Your Website</span>"
    ]
  },
  {
    "objectID": "RSG_template.html",
    "href": "RSG_template.html",
    "title": "Using Templates",
    "section": "",
    "text": "Now, find a website template that you’d like to use. There are a lot of free ones from https://html5up.net/. Or, if you are already savvy with HTML or web design, you may choose to make your own website from scratch. You can also use Jekyll themes that are designed for GitHub Pages, too.\nSome of the templates that we recommend for multiple-page websites include:\n\nHTML5Up’s Editorial\nHTML5Up’s Stellar\nHTML5Up’s Arcana\nHTML5Up’s Minimaxing\n\nIf you’d like a 1-page website, some templates include:\n\nHTML5Up’s Read Only\nHTML5Up’s Strata\n\nRegardless of your desired choice, the set-up remains the same.\n\nDownload the template that you like.\nGo into your downloads folder.\nCopy and paste all of this content into your repository folder (username.github.io). You know this is the right folder because there will be an index.html file inside of it!\nIf the downloaded items include an index.html, you will need to delete your original, barebones index.html we created earlier. (If you are on a Mac, it will ask you automatically).\nThrough RStudio (or the command line, if you know how), commit your changes and push them to GitHub.\nAfter a few minutes, the build should be deployed and you should see this template hosted on your website now.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Using Templates</span>"
    ]
  },
  {
    "objectID": "RSG_customize.html",
    "href": "RSG_customize.html",
    "title": "Customize Your Website",
    "section": "",
    "text": "To personalize your website, you will need to change all of the text and images that are currently in your template.\nIf your site has one page, you will likely only need to edit your index.html file. If your site has more pages, there will be additional .html files for you to edit. To change your styling, there should be a main.css file inside of the assets/css/ folder. Here you can change stylings, like color, text size, and fonts.\nOpen any of the .html files in RStudio to edit them. You can open files by looking in the file pane (usually the bottom right), and clicking the file. It will then open in the file editing pane (usually the big pane in the top left). You can replace the text via editing. To replace images, you will need to create an images folder inside of your username.github.io repository, where you can download images to. You will then have to use image tags &lt;img src=“images/specific_path_to_photo.png”&gt; in your .html files.\nAdditionally, you may want to create more .html files, especially if you’d like an individual page for each of your publications, etc. You may want to delete some of the .html files that you don’t use from the template, too. Just make sure that your index.html or other .html files you do use do not link to the files you delete, or your page will get 404 errors if someone clicks on those links.\nMake sure to save, commit, and push all of your changes to GitHub. We recommend doing this repeatedly, so that you can see your edits taking effect as you edit your site. This may take a few minutes after pushing. When you are in your GitHub repository, you should see a green checkmark next to your commit message to tell you that your build has successfully deployed.",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Customize Your Website</span>"
    ]
  },
  {
    "objectID": "RSG_domain.html",
    "href": "RSG_domain.html",
    "title": "Adding a Custom Domain",
    "section": "",
    "text": "Customizing your domain name can be a complicated process. The full GitHub instructions can be found here.\nThese instructions assume that you already have ownership of the custom domain that you would like to use, as well as knowledge about your specific DNS provider.\n\n\nGo to your GitHub repository\n\n\nClick Settings\n\n\nIn the left-hand menu bar, select Pages\n\n\nScroll down to the Custom Domain section\n\n\nEnter your custom domain in the textbox. For example, you should write: mysite.com\n\n\nHit Save\n\n\nNavigate to your DNS provider and create a CNAME record that points your subdomain to the default domain for your site.\n\n\nExample: if you want to use www.example.com, you will create a CNAME record that points www.example.com to &lt;username&gt;.github.io. Note that this is the user page, not a repository name.\n\n\nInstructions for creating a CNAME record vary by DNS provider. GitHub recommends using your DNS provider’s documentation .\n\n\nFor example, on GoDaddy, when you add a record, the record name would be “www” and the record value would be “username.github.io”\n\n\n\nTo ensure that your apex domain (i.e. without “www”) works, you should also include four A records in your DNS provider’s web console. For example, on GoDaddy, the name would be the @ symbol and the values would be the following:\n\n\n\n185.199.108.153\n\n\n185.199.109.153\n\n\n185.199.110.153\n\n\n185.199.111.153\n\n\n\nConfirm that your DNS record is configured correctly using the terminal.\n\n\nIn the terminal, type: dig WWW.EXAMPLE.COM +nostats +nocomments +nocmd where WWW.EXAMPLE.COM should be replaced with your custom domain name.\n\n\nYou should see the GitHub pages link in the output.\n\n\nThis can take some time to propogate. For example, on GoDaddy, you can set your “TTL” (time to live) as low as 600 seconds. However, GoDaddy also warns that changes may not take effect for up to 48 hours. We also suggest checking your site (and all variations of your site link, e.g., with and without “www”) on an incognito window, as your browser’s cache can sometimes make it appear as if your site did not update.\n\n\n\nGo back to your GitHub repository.\n\n\nGo to Settings &gt; Pages &gt; Custom domain\n\n\nCheck off Enforce HTTPS\n\n\n\nIf this says something along the lines of “Your domain is not properly configured to support HTTPS” we will need to add additional records with your DNS provider\n\n\nWe strongly recommend following instructions from your DNS provider. You should look up “HTTPS record for [your DNS provider]” in Google and follow any of their documentation.\n\n\nFor example, on GoDaddy, you can add an HTTPS record where the name is @ and the value is your site’s domain (e.g., mysite.com)\n\n\n\nIf you run into any additional problems, you may want to ensure that there are no additional A records aside from the ones listed above. This may be a problem if you have previously had your site hosted through a service separate from GitHub pages.\n\n\nSome common warning messages that you may see when GitHub pages is connecting to your site include “DNS valid for primary” or “DNS check in progress” – these are both OK, and should go away once your site is connected.\n\n\nOn the other hand, if you get an error message “DNS check unsuccessful” or “Both your custom domain and its alternative name are improperly configured,” then it means either your A or CNAME records are incorrect. Please check these!",
    "crumbs": [
      "RStudio and Git",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Adding a Custom Domain</span>"
    ]
  }
]