[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GitHub Pages Starter Guide",
    "section": "",
    "text": "Preface\nThe following is a quick starter guide designed to get you acquainted with GitHub Pages, an option for you to create a personal website.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "create.html",
    "href": "create.html",
    "title": "1  Creating Your Website",
    "section": "",
    "text": "To create a personal website with GitHub, you must already have a GitHub account. If you do not, please make one.\nThese instructions largely follow the instructions from GitHub, found here.\n\nIn GitHub, create a new repository called username.github.io where username is replaced by your actual username. For example, if my username is pandabear, my repository is called pandabear.github.io\nOn your desktop, create a folder. I called mine “Personal_Website”\nIn Visual Studio Code on the Welcome Page, click “Clone Git Repository…”\nCopy the full repository link from your GitHub repository using the clone button. Paste this into the search bar that appears in Visual Studio Code when you clicked “Clone Git Repository”\nSelect the folder (“Personal_Website”) as the destination, and click “Open”\nIn your Workspace Pane (the left) you should see that it now says the name of your repository at the top (USERNAME.GITHUB.IO).\nNow, select “New File…”\nType html into the search bar that popped up.\nMake sure that the destination is the name of your repository (this will be in your “Personal_Website” folder if you want to double check).\nName it “index.html”\nInside the file, copy and paste this text:  &lt;!DOCTYPE html&gt;  &lt;html&gt;  &lt;body&gt;  &lt;h1&gt;Hello World&lt;/h1&gt;  &lt;p&gt;I’m hosted with GitHub Pages.&lt;/p&gt;  &lt;/body&gt;  &lt;/html&gt; \nSave your file.\nClick the Source Control icon on your left-hand toolbar. (It has three nodes, and resembles a branch icon).\nYour file index.html should be listed under “Changes”. When you hover over this file, three icons will appear. Click the + button. Now, the file should be listed under “Staged Changes”.\nClick “Commit”. A file will open inside VSCode with a gray line 1. Write your commit message: “Initial Commit”.\nClick the checkmark at the top right toolbar. A dialog box will appear.\nClick Save. The dialog box and the commit file will disappear.\nThere should now be nothing to see in the Source Control pane. Click the three dots in its menu toolbar.\nClick Push. This will send your code/files to the GitHub repository.\nCheck in your GitHub repository to make sure that the commit is pushed. You should see index.html with the commit message that you gave it.\nCheck your actual website by going to username.github.io. It should say (in very basic styling):\n\nHello World\n\n\nI’m hosted with GitHub Pages.\n\nNow that our site is hosted correctly, we can actually build our site to look how we want it!",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Creating Your Website</span>"
    ]
  },
  {
    "objectID": "template.html",
    "href": "template.html",
    "title": "2  Choosing a Template",
    "section": "",
    "text": "Now, find a website template that you’d like to use. There are a lot of free ones from https://html5up.net/. Or, if you are already savvy with HTML or web design, you may choose to make your own website from scratch. You can also use Jekyll themes that are designed for GitHub Pages, too.\nSome of the templates that we recommend for use include:\n\nHTML5Up’s Editorial\nHTML5Up’s Stellar\nHTML5Up’s Arcana\nHTML5Up’s Minimaxing\n\nRegardless of your desired choice, the set-up remains the same.\n\nDownload the template that you like.\nGo into your downloads folder.\nCopy and paste all of this content into your repository folder (username.github.io)\nIf the downloaded items include an index.html, you will need to delete your original, barebones index.html we created earlier. (If you are on a Mac, it will ask you automatically).\nCommit your changes and push them to GitHub.\nAfter a few minutes, the build should be deployed and you should see this template hosted on your website now.",
    "crumbs": [
      "Customization",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Choosing a Template</span>"
    ]
  },
  {
    "objectID": "customizing.html",
    "href": "customizing.html",
    "title": "3  Personalizing Your Website",
    "section": "",
    "text": "To personalize your website, you will need to change all of the text and images that are currently in your template.\nOpen any of the .html files in your coding IDE to edit them. You can replace the text via editing. To replace images, you will need to create an images folder inside of your username.github.io repository, where you can download images to. You will then have to use image tags &lt;img src=“images/specific_path_to_photo.png”&gt; in your .html files.\nAdditionally, you may want to create more .html files, especially if you’d like an individual page for each of your publications, etc. You may want to delete some of the .html files that you don’t use from the template, too. Just make sure that your index.html or other .html files you do use do not link to the files you delete, or your page will get 404 errors if someone clicks on those links.\nMake sure to save, commit, and push all of your changes to GitHub. We recommend doing this repeatedly, so that you can see your edits taking effect as you edit your site. This may take a few minutes after pushing. When you are in your GitHub repository, you should see a green checkmark next to your commit message to tell you that your build has successfully deployed.",
    "crumbs": [
      "Customization",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Personalizing Your Website</span>"
    ]
  },
  {
    "objectID": "domain.html",
    "href": "domain.html",
    "title": "4  Adding a Custom Domain",
    "section": "",
    "text": "TO DO TO DO",
    "crumbs": [
      "Customization",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Adding a Custom Domain</span>"
    ]
  }
]